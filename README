Global Data Hub
===============

Welcome to the Global Data hub repository.

What technologies?
------------------

'Global Data hub' makes use of a few different technologies to detect changes in the source systems and apply those changes to the 'Enstar Conformed Schema'. There are a few distinct stages in the process:

    1. Changes to the source systems are detected by Attunity Replicate and ingested into HDFS.
    2. Changes are appiied to a 'Replicated sources' copy of the source system.
    3. Changes in the replicated source are conformed to the Enstar Schema
    4. The changes are added to the Global Data hub for users to query.

Stages 2 -4 are implemented in SparkSQL; These are wrapped in Oozie workflows and co-ordinators to assist scheduling.


Directory Setup 
----------------
  - **deployment**
    - **scripts** :  Deployment scripts 
  - **environent**
    - **avro** : Avro schema files
    - **hive**
        - **schemas** : hive table schemas
        - **queries** : transformation queries
    - **oozie** 
        - **coordinators** : Oozie co-ordinator XML files
        - **properties** :  Oozie job properties
        - **workflows** : Oozie workflow XML files
    - **spark**
        - **properties** : spark properties files
  - **source**
    - **GlobalDatahub** : Spark job sources
    - **UDFs** : Hive user defined functions sources.

### Branching model
Git branching model based on: [a successful git branching model](http://nvie.com/posts/a-successful-git-branching-model/)

- `master` contains production code only. Should only be merged into when hotfixes or releases are complete
- `hotfix/hotfixname` to be used to fix any production issues with new minor versions
- `develop` to be used in development, always branch from the develop branch to create features
    - `feature/{featurename}` development of features. Should be merged into `develop`upon completion 

### Developing
Most development will be done on feature branches branched off `develop`, the following instructions should be used to create features:

		git clone https://enstargroup.visualstudio.com/_git/GlobalDataHub
		git checkout -b feature/{your feature name} develop
		git commit -am "Implemented {feature name}"
		git push origin feature/{your feature name}
Finally, open a pull request on github to merge your feature into `develop`

Note:
> When development of a new release or project begins you should make sure to update all maven release numbers relating to the new release.  

>Coding styles are enforced during maven builds, so you may notice minor changes to formating after running a build.